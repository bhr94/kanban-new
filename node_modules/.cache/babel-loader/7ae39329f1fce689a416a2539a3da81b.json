{"ast":null,"code":"var loadCardsAction = function loadCardsAction(listId, boardId, idToken) {\n  return function (dispatch) {\n    var bodyContent = JSON.stringify({\n      listId: listId\n    });\n    dispatch({\n      type: \"LOAD_CARDS_PENDING\"\n    });\n    fetch('http://localhost:3001/loadCards', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": idToken\n      },\n      body: bodyContent\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return dispatch({\n        type: \"LOAD_CARDS_SUCCESS\",\n        payload: {\n          data,\n          boardId,\n          listId\n        }\n      });\n    }).catch(function (error) {\n      return dispatch({\n        type: 'LOAD_CARDS_FAILED',\n        payload: error\n      });\n    });\n  };\n};\n\nexport default loadCardsAction;","map":{"version":3,"sources":["/Users/baharmutadayin/Documents/kanban-new/src/redux/actions/loadCardsAction.js"],"names":["loadCardsAction","listId","boardId","idToken","dispatch","bodyContent","JSON","stringify","type","fetch","method","headers","body","then","response","json","data","payload","catch","error"],"mappings":"AAEC,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD,EAASC,OAAT,EAAkBC,OAAlB;AAAA,SAA8B,UAACC,QAAD,EAAc;AACjE,QAAMC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC/BN,MAAAA,MAAM,EAAEA;AADuB,KAAf,CAApB;AAGAG,IAAAA,QAAQ,CAAC;AAAEI,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,iCAAD,EACD;AACIC,MAAAA,MAAM,EAAE,MADZ;AAEIC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,yBAAiBR;AAFZ,OAFb;AAMIS,MAAAA,IAAI,EAAEP;AANV,KADC,CAAL,CASKQ,IATL,CASU,UAAAC,QAAQ,EAAI;AACd,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAXL,EAYKF,IAZL,CAYU,UAAAG,IAAI;AAAA,aAAIZ,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,oBAAR;AAA8BS,QAAAA,OAAO,EAAE;AAAED,UAAAA,IAAF;AAAQd,UAAAA,OAAR;AAAiBD,UAAAA;AAAjB;AAAvC,OAAD,CAAZ;AAAA,KAZd,EAaKiB,KAbL,CAaW,UAAAC,KAAK;AAAA,aAAIf,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,mBAAR;AAA6BS,QAAAA,OAAO,EAAEE;AAAtC,OAAD,CAAZ;AAAA,KAbhB;AAeH,GApBwB;AAAA,CAAxB;;AAsBD,eAAenB,eAAf","sourcesContent":["\n\n const loadCardsAction = (listId, boardId, idToken) => (dispatch) => {\n    const bodyContent = JSON.stringify({\n        listId: listId\n    })\n    dispatch({ type: \"LOAD_CARDS_PENDING\" });\n    fetch('http://localhost:3001/loadCards',\n        {\n            method: 'post',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\": idToken\n            },\n            body: bodyContent\n        })\n        .then(response => {\n            return response.json()\n        })\n        .then(data => dispatch({ type: \"LOAD_CARDS_SUCCESS\", payload: { data, boardId, listId } }))\n        .catch(error => dispatch({ type: 'LOAD_CARDS_FAILED', payload: error }))\n\n}\n    \nexport default loadCardsAction;"]},"metadata":{},"sourceType":"module"}