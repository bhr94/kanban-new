{"ast":null,"code":"import _classCallCheck from \"/Users/baharmutadayin/Documents/kanban-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/baharmutadayin/Documents/kanban-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/baharmutadayin/Documents/kanban-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/baharmutadayin/Documents/kanban-new/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/baharmutadayin/Documents/kanban-new/src/views/examples/UserProfile.js\";\nimport React from \"react\";\nimport \"tachyons\";\nimport Modal from \"react-modal\";\nimport history from '../../history';\nimport { connect } from \"react-redux\";\nimport createBoardAction from \"../../redux/actions/createBoardAction\";\nimport \"../../style.css\";\nimport { Redirect } from \"react-router-dom\";\nimport loadBoardsAction from \"../../redux/actions/loadBoardsAction\";\nimport Scroll from \"./Scroll\";\nimport { Spinner } from 'reactstrap';\nimport UserData from \"./UserData\";\nimport loadCurrentBoardListAction from \"../../redux/actions/loadCurrentBoardListAction\";\nimport loadListsAction from \"../../redux/actions/loadListsAction\";\nimport removeCurrentBoardDataAction from \"../../redux/actions/removeCurrentBoardDataAction\";\nimport addNewBoardAction from \"../../redux/actions/addNewBoardAction\";\nimport { Button, Container, Row, Card, Col } from \"reactstrap\"; // import Modal from 'react-bootstrap/Modal'\n\nModal.setAppElement(\"#root\");\n\nvar UserProfile = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserProfile, _React$Component);\n\n  var _super = _createSuper(UserProfile);\n\n  function UserProfile(props) {\n    var _this;\n\n    _classCallCheck(this, UserProfile);\n\n    _this = _super.call(this, props);\n\n    _this.openModal = function () {\n      _this.setState({\n        modalIsOpen: true\n      });\n    };\n\n    _this.closeModal = function () {\n      _this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    _this.inputOnChange = function (event) {\n      _this.setState({\n        inputValue: event.target.value\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        modalIsOpen: false\n      });\n\n      var bodyContent = JSON.stringify({\n        boardTitle: _this.state.inputValue,\n        userId: UserData.getId()\n      });\n\n      if (_this.state.inputValue.length > 0) {\n        fetch('http://localhost:3001/createBoard', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": UserData.getToken()\n          },\n          body: bodyContent\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          if (data) {\n            _this.props.createBoard(data.boardname, data.boardid);\n\n            UserData.setCurrentBoardData(data);\n            history.push(\"/board-page/\".concat(data.boardid));\n          } else {\n            alert(\"failed to create a board\");\n          }\n        });\n      } else {\n        alert(\"please add a board name\");\n\n        _this.setState({\n          modalIsOpen: true\n        });\n      }\n    };\n\n    _this.goToBoard = function (boardId) {\n      var boardTitle = '';\n\n      _this.props.boards.map(function (board) {\n        if (board.boardId === boardId) {\n          boardTitle = board.boardTitle;\n        }\n      });\n\n      var data = {\n        \"boardid\": boardId,\n        \"boardname\": boardTitle\n      };\n      UserData.setCurrentBoardData(data);\n      history.push(\"/board-page/\".concat(boardId)); // this.props.loadCurrentBoardList(boardId, UserData.getToken())\n    };\n\n    _this.state = {\n      modalIsOpen: false,\n      setModalIsOpen: true,\n      inputValue: \"\",\n      user: {\n        id: \"\",\n        name: \"\"\n      }\n    };\n    return _this;\n  }\n\n  _createClass(UserProfile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.boards.length === 0) {\n        this.props.loadBoards(UserData.getId(), UserData.getToken());\n      } // if(this.props.boards.length < boards.length){\n      //   this.props.addNewBoard(this.props.loadBoards(UserData.getId(), UserData.getToken())[this.props.loadBoards(UserData.getId(), UserData.getToken()).length-1])\n      // }\n      // this.props.loadBoards(UserData.getId(), UserData.getToken());\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var boards = this.props.boards;\n\n      if (UserData.getToken()) {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"nav\", {\n          className: \"dt w-100 border-box ph5-ns b--white-10\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"dtc v-mid mid-gray link dim w-25\",\n          href: \"#\",\n          title: \"Home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"http://tachyons.io/img/logo.jpg\",\n          className: \"dib w2 h2 br-100\",\n          alt: \"Site Name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dtc v-mid w-75 tr\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"link dim white f6 f5-ns dib mr3 mr4-ns\",\n          href: \"/landing-page\",\n          title: \"Home\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }\n        }, \"Home\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"boardTitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }\n        }, \"Welcome \", UserData.getName(), \" \"), /*#__PURE__*/React.createElement(\"section\", {\n          className: \"section section-lg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Container, {\n          className: \"py-lg-md d-flex\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col px-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"main\", {\n          ref: \"main\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"position-relative\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          onClick: this.openModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 19\n          }\n        }, \"+ Create a board\"), /*#__PURE__*/React.createElement(Modal, {\n          isOpen: this.state.modalIsOpen,\n          onHide: this.closeModal,\n          className: \"center mw5 mw6-ns hidden ba mv4 pa3 bt\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          id: \"name\",\n          className: \"input-reset ba b--black-20 pa2 mb2 db w-100\",\n          type: \"text\",\n          \"aria-describedby\": \"name-desc\",\n          placeholder: \"Board title\",\n          onChange: this.inputOnChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }\n        }, \"Board body\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          onClick: this.closeModal,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 21\n          }\n        }, \"X\"), /*#__PURE__*/React.createElement(Button, {\n          variant: \"primary\",\n          onClick: this.handleClick,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        }, \"ADD\"))))), this.props.isBoardsPending ? /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"h1\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }\n        }, \"Loading\"), /*#__PURE__*/React.createElement(Spinner, {\n          color: \"warning\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }\n        })) : /*#__PURE__*/React.createElement(Row, {\n          className: \"cardContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }\n        }, boards.length > 0 ? boards.map(function (board, i) {\n          return /*#__PURE__*/React.createElement(Card, {\n            className: \"text-center  cards cardTitle\",\n            key: i,\n            onClick: function onClick() {\n              return _this2.goToBoard(board.boardId);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 23\n            }\n          }, board.boardTitle);\n        }) : null));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/login-page\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }]);\n\n  return UserProfile;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    boards: state.boards,\n    user: state.user,\n    isBoardsPending: state.isBoardsPending,\n    boardsLoadError: state.boardsLoadError,\n    currentBoard: state.currentBoard\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    createBoard: function createBoard(boardTitle, boardId) {\n      return dispatch(createBoardAction(boardTitle, boardId));\n    },\n    loadBoards: function loadBoards(userId, idToken) {\n      return dispatch(loadBoardsAction(userId, idToken));\n    },\n    loadCurrentBoardList: function loadCurrentBoardList(boardId, idToken) {\n      return dispatch(loadCurrentBoardListAction(boardId, idToken));\n    },\n    loadLists: function loadLists(boardId, idToken) {\n      return dispatch(loadListsAction(boardId, idToken));\n    },\n    removeCurrentBoardData: function removeCurrentBoardData() {\n      return dispatch(removeCurrentBoardDataAction());\n    },\n    addNewBoard: function addNewBoard(board) {\n      return dispatch(addNewBoardAction(board));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","map":{"version":3,"sources":["/Users/baharmutadayin/Documents/kanban-new/src/views/examples/UserProfile.js"],"names":["React","Modal","history","connect","createBoardAction","Redirect","loadBoardsAction","Scroll","Spinner","UserData","loadCurrentBoardListAction","loadListsAction","removeCurrentBoardDataAction","addNewBoardAction","Button","Container","Row","Card","Col","setAppElement","UserProfile","props","openModal","setState","modalIsOpen","closeModal","inputOnChange","event","inputValue","target","value","handleClick","bodyContent","JSON","stringify","boardTitle","state","userId","getId","length","fetch","method","headers","getToken","body","then","response","json","data","createBoard","boardname","boardid","setCurrentBoardData","push","alert","goToBoard","boardId","boards","map","board","setModalIsOpen","user","id","name","loadBoards","getName","isBoardsPending","i","Component","mapStateToProps","boardsLoadError","currentBoard","mapDispatchToProps","dispatch","idToken","loadCurrentBoardList","loadLists","removeCurrentBoardData","addNewBoard"],"mappings":"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","sourcesContent":["\n\nimport React from \"react\"\nimport \"tachyons\"\nimport Modal from \"react-modal\";\nimport history from '../../history'\nimport { connect } from \"react-redux\"\nimport createBoardAction from \"../../redux/actions/createBoardAction\"\nimport \"../../style.css\"\nimport { Redirect } from \"react-router-dom\"\nimport loadBoardsAction from \"../../redux/actions/loadBoardsAction\"\nimport Scroll from \"./Scroll\"\nimport { Spinner } from 'reactstrap';\nimport UserData from \"./UserData\";\nimport loadCurrentBoardListAction from \"../../redux/actions/loadCurrentBoardListAction\"\nimport loadListsAction from \"../../redux/actions/loadListsAction\"\nimport removeCurrentBoardDataAction from \"../../redux/actions/removeCurrentBoardDataAction\"\nimport addNewBoardAction from \"../../redux/actions/addNewBoardAction\"\n\nimport {\n  Button,\n  Container,\n  Row,\n  Card,\n  Col\n} from \"reactstrap\";\n\n\n// import Modal from 'react-bootstrap/Modal'\n\n\nModal.setAppElement(\"#root\")\n\nclass UserProfile extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      modalIsOpen: false,\n      setModalIsOpen: true,\n      inputValue: \"\",\n      user: {\n        id: \"\",\n        name: \"\"\n      }\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.boards.length === 0) {\n       this.props.loadBoards(UserData.getId(), UserData.getToken());\n    }\n\n    // if(this.props.boards.length < boards.length){\n    //   this.props.addNewBoard(this.props.loadBoards(UserData.getId(), UserData.getToken())[this.props.loadBoards(UserData.getId(), UserData.getToken()).length-1])\n    // }\n\n\n    // this.props.loadBoards(UserData.getId(), UserData.getToken());\n  }\n\n  openModal = () => {\n    this.setState({ modalIsOpen: true })\n  }\n\n  closeModal = () => {\n    this.setState({ modalIsOpen: false })\n  }\n\n  inputOnChange = (event) => {\n    this.setState({ inputValue: event.target.value })\n  }\n\n  handleClick = () => {\n    this.setState({ modalIsOpen: false })\n    let bodyContent = JSON.stringify({\n      boardTitle: this.state.inputValue,\n      userId: UserData.getId()\n    })\n\n    if (this.state.inputValue.length > 0) {\n      fetch('http://localhost:3001/createBoard',\n        {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            \"Authorization\": UserData.getToken()\n          },\n          body: bodyContent\n        })\n        .then(response => {\n          return response.json()\n        })\n        .then(data => {\n          if (data) {\n            this.props.createBoard(data.boardname, data.boardid)\n            UserData.setCurrentBoardData(data);\n            history.push(`/board-page/${data.boardid}`)\n            \n          }\n          else {\n            alert(\"failed to create a board\")\n          }\n        })\n    }\n    else {\n      alert(\"please add a board name\")\n      this.setState({ modalIsOpen: true })\n    }\n\n  }\n\n\n\n  goToBoard = (boardId) => {\n    let boardTitle = '';\n    this.props.boards.map(board =>{\n        if(board.boardId === boardId) {\n          boardTitle = board.boardTitle\n        }\n    })\n    let data = {\n      \"boardid\": boardId,\n      \"boardname\": boardTitle\n    }\n\n    UserData.setCurrentBoardData(data);\n    history.push(`/board-page/${boardId}`)\n\n    // this.props.loadCurrentBoardList(boardId, UserData.getToken())\n    \n  }\n\n  render() {\n    const { boards } = this.props\n    if (UserData.getToken()) {\n      return (\n        <>\n          <nav className=\"dt w-100 border-box ph5-ns b--white-10\">\n            <a className=\"dtc v-mid mid-gray link dim w-25\" href=\"#\" title=\"Home\">\n              <img src=\"http://tachyons.io/img/logo.jpg\" className=\"dib w2 h2 br-100\" alt=\"Site Name\" />\n            </a>\n            <div className=\"dtc v-mid w-75 tr\">\n              {/* <a className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href=\"#\" title=\"boar\">Boards</a> */}\n              <a className=\"link dim white f6 f5-ns dib mr3 mr4-ns\" href='/landing-page' title=\"Home\">Home</a>\n            </div>\n          </nav>\n          <div className=\"boardTitle\">Welcome {UserData.getName()} </div>\n          <section className=\"section section-lg\">\n            <Container className=\"py-lg-md d-flex\" >\n              <div className=\"col px-0\">\n                  <main ref=\"main\">\n                    <div className=\"position-relative\">\n                      {/* shape Hero */}\n                    </div>\n                  </main>\n                  <Button variant=\"primary\" onClick={this.openModal}>\n                    + Create a board\n                </Button>\n\n\n                  <Modal isOpen={this.state.modalIsOpen} onHide={this.closeModal} className=\"center mw5 mw6-ns hidden ba mv4 pa3 bt\">\n                    {/* <h2>Board title</h2> */}\n                    <input\n                      id=\"name\"\n                      className=\"input-reset ba b--black-20 pa2 mb2 db w-100\"\n                      type=\"text\" aria-describedby=\"name-desc\"\n                      placeholder=\"Board title\"\n                      onChange={this.inputOnChange}\n                    />\n                    <p>Board body</p>\n                    <Button variant=\"primary\" onClick={this.closeModal}>\n                      X\n                  </Button>\n                    <Button variant=\"primary\" onClick={this.handleClick}>\n                      ADD\n                </Button>\n                  </Modal>\n              </div>\n            </Container>\n          </section>\n\n          {this.props.isBoardsPending ?\n            <div>\n              <h1>Loading</h1>\n              <Spinner color=\"warning\" />\n            </div>\n            :\n              <Row className=\"cardContainer\">\n\n                {boards.length > 0 ?\n                  boards.map((board, i) => {\n                    return (\n                      <Card className=\"text-center  cards cardTitle\" key={i} onClick={() => this.goToBoard(board.boardId)}>\n                        {board.boardTitle}\n                      </Card>\n                    )\n                  }) :\n                  null\n                }\n              </Row>\n          }\n        </>\n\n      )\n    }\n    else {\n      return (\n        <Redirect to=\"/login-page\" />\n      )\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    boards: state.boards,\n    user: state.user,\n    isBoardsPending: state.isBoardsPending,\n    boardsLoadError: state.boardsLoadError,\n    currentBoard:state.currentBoard\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    createBoard: (boardTitle, boardId) => dispatch(createBoardAction(boardTitle, boardId)),\n    loadBoards: (userId, idToken) => dispatch(loadBoardsAction(userId, idToken)),\n    loadCurrentBoardList:(boardId, idToken) =>dispatch(loadCurrentBoardListAction(boardId,idToken)),\n    loadLists: (boardId, idToken) => dispatch(loadListsAction(boardId, idToken)),\n    removeCurrentBoardData: () => dispatch(removeCurrentBoardDataAction()),\n    addNewBoard:(board) => dispatch(addNewBoardAction(board))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);"]},"metadata":{},"sourceType":"module"}