{"ast":null,"code":"var loadCurrentBoardAction = function loadCurrentBoardAction(boardId, idToken) {\n  return function (dispatch) {\n    dispatch({\n      type: \"LOAD_CURRENT_BOARD_PENDING\"\n    });\n    fetch('http://localhost:3001/loadCurrenteBoard', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json',\n        \"Authorization\": idToken\n      },\n      body: JSON.stringify({\n        boardId: boardId\n      })\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return dispatch({\n        type: \"LOAD_CURRENT_BOARD_SUCCESS\",\n        payload: data\n      });\n    }).catch(function (error) {\n      return dispatch({\n        type: 'LOAD_CURRENT_BOARD_FAILED',\n        payload: error\n      });\n    });\n  };\n};\n\nexport default loadCurrentBoardAction;","map":{"version":3,"sources":["/Users/baharmutadayin/Documents/kanban-new/src/redux/actions/loadCurrentBoardAction.js"],"names":["loadCurrentBoardAction","boardId","idToken","dispatch","type","fetch","method","headers","body","JSON","stringify","then","response","json","data","payload","catch","error"],"mappings":"AAAA,IAAMA,sBAAsB,GAAE,SAAxBA,sBAAwB,CAACC,OAAD,EAAUC,OAAV;AAAA,SAAqB,UAACC,QAAD,EAAa;AAE5DA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,yCAAD,EACH;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiBL;AAFV,OAFX;AAMEM,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBT,QAAAA,OAAO,EAAEA;AADO,OAAf;AANP,KADG,CAAL,CAWGU,IAXH,CAWQ,UAAAC,QAAQ,EAAG;AACf,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAbH,EAcGF,IAdH,CAcQ,UAAAG,IAAI;AAAA,aAAIX,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAC,4BAAN;AAAoCW,QAAAA,OAAO,EAACD;AAA5C,OAAD,CAAZ;AAAA,KAdZ,EAeGE,KAfH,CAeS,UAAAC,KAAK;AAAA,aAAId,QAAQ,CAAC;AAACC,QAAAA,IAAI,EAAE,2BAAP;AAAoCW,QAAAA,OAAO,EAACE;AAA5C,OAAD,CAAZ;AAAA,KAfd;AAgBH,GAnB6B;AAAA,CAA9B;;AAqBA,eAAejB,sBAAf","sourcesContent":["const loadCurrentBoardAction =(boardId, idToken) =>(dispatch) =>{\n\n    dispatch({type: \"LOAD_CURRENT_BOARD_PENDING\"});\n    fetch('http://localhost:3001/loadCurrenteBoard',\n      {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\": idToken\n        },\n        body:JSON.stringify({\n            boardId: boardId\n          })\n      })\n      .then(response =>{\n        return response.json()\n      })\n      .then(data => dispatch({type:\"LOAD_CURRENT_BOARD_SUCCESS\", payload:data}))\n      .catch(error => dispatch({type: 'LOAD_CURRENT_BOARD_FAILED', payload:error }))\n}\n\nexport default loadCurrentBoardAction;"]},"metadata":{},"sourceType":"module"}