{"ast":null,"code":"var loadBoardsAction = function loadBoardsAction(userId, idToken) {\n  return function (dispatch) {\n    var bodyContent = JSON.stringify({\n      userId: userId\n    });\n    dispatch({\n      type: \"LOAD_BOARDS_PENDING\"\n    });\n    fetch('http://localhost:3001/loadBoards', {\n      method: 'post',\n      headers: {\n        'Content-type': 'application/json',\n        \"Authorization\": idToken\n      },\n      body: bodyContent\n    }).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return dispatch({\n        type: \"LOAD_BOARDS_SUCCESS\",\n        payload: data\n      });\n    }).catch(function (error) {\n      return dispatch({\n        type: 'LOAD_BOARDS_FAILED',\n        payload: error\n      });\n    });\n  };\n};\n\nexport default loadBoardsAction;","map":{"version":3,"sources":["/Users/baharmutadayin/Documents/kanban-new/src/redux/actions/loadBoardsAction.js"],"names":["loadBoardsAction","userId","idToken","dispatch","bodyContent","JSON","stringify","type","fetch","method","headers","body","then","response","json","data","payload","catch","error"],"mappings":"AACA,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAEC,MAAF,EAAUC,OAAV;AAAA,SAAqB,UAACC,QAAD,EAAa;AACvD,QAAMC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe;AAC/BL,MAAAA,MAAM,EAAEA;AADuB,KAAf,CAApB;AAGAE,IAAAA,QAAQ,CAAC;AAACI,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,kCAAD,EACH;AACEC,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAiBR;AAFV,OAFX;AAMES,MAAAA,IAAI,EAACP;AANP,KADG,CAAL,CASGQ,IATH,CASQ,UAAAC,QAAQ,EAAG;AACf,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAXH,EAYGF,IAZH,CAYQ,UAAAG,IAAI;AAAA,aAAIZ,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAC,qBAAN;AAA6BS,QAAAA,OAAO,EAACD;AAArC,OAAD,CAAZ;AAAA,KAZZ,EAaGE,KAbH,CAaS,UAAAC,KAAK;AAAA,aAAIf,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAE,oBAAP;AAA6BS,QAAAA,OAAO,EAACE;AAArC,OAAD,CAAZ;AAAA,KAbd;AAeH,GApBwB;AAAA,CAAzB;;AAuBA,eAAelB,gBAAf","sourcesContent":["\nconst loadBoardsAction = ( userId, idToken) =>(dispatch) =>{\n    const bodyContent = JSON.stringify({\n        userId: userId\n      });\n    dispatch({type: \"LOAD_BOARDS_PENDING\"});\n    fetch('http://localhost:3001/loadBoards',\n      {\n        method: 'post',\n        headers: {\n          'Content-type': 'application/json',\n          \"Authorization\": idToken\n        },\n        body:bodyContent\n      })\n      .then(response =>{\n        return response.json()\n      })\n      .then(data => dispatch({type:\"LOAD_BOARDS_SUCCESS\", payload:data}))\n      .catch(error => dispatch({type: 'LOAD_BOARDS_FAILED', payload:error }))\n       \n}\n\n\nexport default loadBoardsAction;"]},"metadata":{},"sourceType":"module"}